import React, { useState } from 'react';
import AddService from './AddService'; // Import the AddService component
import { db } from "../firebase/config";
import { set, ref } from "firebase/database";

interface Service {
  id: string; // Change to string if IDs are generated by Firebase
  name: string;
  description: string;
}

interface ServicesProps {
  services: Service[];
  setServices: React.Dispatch<React.SetStateAction<Service[]>>;
}

const Services: React.FC<ServicesProps> = ({ services, setServices }) => {
  const [editService, setEditService] = useState<Service | null>(null);

  const handleDelete = async (id: string) => {
    try {
      const serviceRef = ref(db, 'services/' + id);
      await set(serviceRef, null); // Delete the service from Firebase
      
      // Update local state
      setServices(prevServices => prevServices.filter(service => service.id !== id));
    } catch (error) {
      console.error("Error deleting service: ", error);
    }
  };

  return (
    <div className="services">
      <header className="services-header">
        <h1>Our Services</h1>
        <p>Explore the wide variety of services available at Denton Amusement Park.</p>
      </header>

      <div className="service-div">
        <AddService setServices={setServices} editService={editService} /> {/* Pass editService for editing */}

        <section className="services-list">
          {services.length === 0 ? (
            <p>There are no services available currently.</p>
          ) : (
            services.map(service => (
              <div key={service.id} className="service-item">
                <h3>{service.name}</h3>
                <p>{service.description}</p>
                <button onClick={() => setEditService(service)}>Edit</button> {/* Set the selected service for editing */}
                <button onClick={() => handleDelete(service.id)}>Delete</button> {/* Delete the service */}
              </div>
            ))
          )}
        </section>
      </div>
    </div>
  );
};

export default Services;
